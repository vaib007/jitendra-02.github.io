{"name":"Jitendra-02.GitHub.io","tagline":"Jitendra Kumar Khasdev","body":"Jitendra Kumar Khasdev\r\n17-March-2015\r\n\r\nMapping of functions (library or user defined) to system call.\r\n\r\n\r\nAbstract:\r\n\r\nMapping of functions with respective system calls will the help to give closer view of interaction between kernel space and user space. Prime focus is on to simulate user space function to kernel space function. This project will simulate linking between user space function to kernel space function. Adding this feature to strace, it will make it more powerful for visualization. Strace can do effectively call by call mapping with respective system call.\r\n\r\nContent:\r\n\r\nDescription and why it is innovative\r\n\r\nWhen a function is called into a simple c program, ultimately it invokes a system call to get service by the kernel. Most of the time, user (developer/administrator etc.) having a difficulty to find which function is invoking a particular system call. \r\n\t\t\t\t\t\tLet us assume two different library functions invoking same system call simultaneously. Now, user has to put very hard effort to differentiate which function is linked with a particular system call. Currently strace displays system calls called by a program without any callee function description. \r\n\r\nOur project will map each user space function to corresponding system call in a proper view format, so that user will not having trouble to simulate user space function to kernel space function. It will make debugging and tracing fast and more efficient.\r\n\r\nDesign :\r\n\r\nStep 1:  First user will fire a binary of program with strace command with specified flag.\r\n\t\r\nStep 2:  Whenever strace will detect particular flag then it will perform following steps else it will \t give result as it is as it gives.\r\n\r\nStep 3:  It will collect the list of functions which is used into a particular program from symbol table \t or may be any other way. [Preliminary focused on symbol table].\r\n\r\nStep 4:  Now perform mapping of each function to corresponding system call and display into such \t  kind of format [format of display is not fixed it is depends on degree of attractiveness].\r\n\r\n\teg. Printf() calls internally write() syscall, so output format as,\r\n\r\n\tprintf ()         -----------------------------------------\r\n                      ->     |   write(1, buffer, sizeof(buffer));    |\r\n\t\t          ------------------------------------------\r\nStep 5 : Exit \r\n\r\n\t\tit will trace function calls like debugger fashion but limit of tracing will be until it  reach to a appropriate system call. It will not only give broad view of working of the system but also it will be handy hacking tool as well as it will be helpful for new bodies to apply the concept of computer science.\r\nThat will increase strace audience area as well as it will be a more strong and powerful tool.\r\n\r\nEducation:\r\nCurrently pursuing Bachelorâ€™s in Engineering from Computer Science and Engineering with 8.02 CGPA.\r\nHigher secondary school  \t78.6 %\r\nHigh school \t\t\t87.2%\r\n\r\nCourseware:\r\nC, Data structure, Operating system, Linux, Computer system organisation, Networking, OOT, Principle of programming language, Software engineering and project management etc.\r\n\r\nTraining:\r\nC, Linux, System programming\r\n\r\n\r\nProjects:\r\nNEKTech-Linux-shell development:\r\nIt is Unix like a shell for nektech-linux, I have worked two feature of it (cd support, and cd ~ support). \r\n\r\nSystem Identification Module:\r\nIt is utility which keep record of active client machines over the server. Basically it based on product activation and deactivation model.\r\n\r\nGesture detection based security system:\r\nIn which, it detects predefined gesture of the person, and take action according to that gesture. \r\n\r\nActivities:\r\n\r\n1. My one Linux kernel patch is accepted by the Linux community, however it was just coding style fix but I become aware of code review process of Linux community.\r\n\r\n2. I am aware of version controlling software and I have worked git.\r\n\r\n3. I am good c, Linux and Operating System concept and enthusiastic about system programming and kernel.\r\n\r\n4. I have communicated in open source community with developer via mailing list.\r\n\r\n5. Solved coding problems on hackerrank.com, and some on spoj.com\r\n\r\n6. Participated into eudyputa challenge solved till level 6.\r\n\r\nI am focused on only this project and period of next 4-5 month I am free, because I am on end session of my engineering so it will be a great chance for me to work for real world before entering into a professional engineering life.   \r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}